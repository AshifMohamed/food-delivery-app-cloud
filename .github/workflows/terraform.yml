name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    # credincials
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      AZURE_ORDER_FUNCTION_APP_NAME: 'functionapporder20230108'
      AZURE_RESTAURANT_FUNCTION_APP_NAME: 'functionapprestaurant20230108'
      AZURE_FUNCTION_APP_PACKAGE_PATH: '.'
      DOTNET_VERSION: '6.0'

    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2


    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform"

    # - name: 'Terraform Destroy'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'destroy'
    #     tf_actions_working_dir: "./terraform"

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"



    # - name: 'Checkout GitHub Action'
    #   uses: actions/checkout@v3

  #     If you want to use Azure RBAC instead of Publish Profile,
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # set up AZURE_CREDENTIALS secrets in your repository

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      run: dotnet restore

    - name: Build Order Function
      run: dotnet build ./PickMeFoodDelivery.Orders --configuration Release --output ./output/orders

    - name: Build Restaurant Function
      run: dotnet build ./PickMeFoodDelivery.Restaurants --configuration Release --output ./output/restaurants

    - name: 'Run Azure Functions Action order'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_ORDER_FUNCTION_APP_NAME }}
        package: '${{ env.AZURE_FUNCTION_APP_PACKAGE_PATH }}/output/orders'
       # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC

    - name: 'Run Azure Functions Action restaurant'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_RESTAURANT_FUNCTION_APP_NAME }}
        package: '${{ env.AZURE_FUNCTION_APP_PACKAGE_PATH }}/output/restaurants'
